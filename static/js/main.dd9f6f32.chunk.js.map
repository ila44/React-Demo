{"version":3,"sources":["ListItem.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","listItems","items","map","item","className","type","id","key","value","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleinput","bind","addItem","this","setState","Date","preventDefault","newItem","tasks","filteredItems","filter","val","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAiCeA,MA5Bf,SAAkBC,GAEd,IACMC,EADQD,EAAME,MACGC,KAAK,SAAAC,GACxB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKA,KACzCM,SAAU,SAACC,GACPX,EAAMY,UAAUD,EAAEE,OAAOJ,MAAML,EAAKI,QAG5C,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAAUS,KAAK,QAC1CC,QAAS,kBAAKf,EAAMgB,WAAWZ,EAAKI,cATdJ,EAAKI,QAc3C,OACI,8BACI,cAAC,IAAD,CAAUS,SAAU,IAAKC,OAAO,cAAhC,SACEjB,O,eCnBdkB,IAAQC,IAAIC,K,IAgFGC,E,kDA5Eb,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,CACXrB,MAAM,GACNsB,YAAa,CACXpB,KAAK,GACLI,IAAI,KAGR,EAAKiB,YAAa,EAAKA,YAAYC,KAAjB,gBAClB,EAAKC,QAAQ,EAAKA,QAAQD,KAAb,gBACb,EAAKV,WAAY,EAAKA,WAAWU,KAAhB,gBACjB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZA,E,+CAgBnB,SAAYf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVpB,KAAKO,EAAEE,OAAOJ,MACdD,IAAI,IAAIsB,U,qBAKd,SAAQnB,GACNA,EAAEoB,iBACF,IAAMC,EAAWJ,KAAKL,MAAMC,YAC5B,GAAkB,KAAfQ,EAAQ5B,KAAW,CACpB,IAAM6B,EAAK,sBAAOL,KAAKL,MAAMrB,OAAlB,CAAwB8B,IACnCJ,KAAKC,SAAS,CACZ3B,MAAM+B,EACNT,YAAY,CACVpB,KAAK,GACLI,IAAI,U,wBAMZ,SAAWA,GACT,IAAM0B,EAAiBN,KAAKL,MAAMrB,MAAMiC,QAAQ,SAAA/B,GAAI,OAAGA,EAAKI,MAAMA,KAClEoB,KAAKC,SAAS,CACZ3B,MAAMgC,M,uBAIV,SAAUE,EAAI5B,GACZ,IAAMN,EAAQ0B,KAAKL,MAAMrB,MACzBA,EAAMC,KAAK,SAAAC,GACNA,EAAKI,MAAQA,IACdJ,EAAKA,KAAMgC,MAGfR,KAAKC,SAAS,CACZ3B,MAAMA,M,oBAKV,WACE,OACE,sBAAKG,UAAU,MAAf,UACE,iCACE,uBAAME,GAAG,aAAa8B,SAAUT,KAAKD,QAArC,UACE,uBAAOrB,KAAK,OAAOgC,YAAY,uBAAuB7B,MAAOmB,KAAKL,MAAMC,YAAYpB,KAClFM,SAAUkB,KAAKH,cACjB,wBAAQnB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAUJ,MAAO0B,KAAKL,MAAMrB,MAAQc,WAAYY,KAAKZ,WAAYJ,UAAWgB,KAAKhB,mB,GAxEvE2B,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dd9f6f32.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ListItem.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItem(props) {\r\n\r\n    const items = props.items;\r\n    const listItems= items.map( item=> {\r\n        return <div className=\"list\" key={item.key}>\r\n            <p>\r\n                <input type=\"text\" id={item.key} value={item.item}\r\n                    onChange={(e)=> {\r\n                        props.setUpdate(e.target.value,item.key)\r\n                    }} />\r\n               \r\n                <span>\r\n                    <FontAwesomeIcon className=\"faicons\" icon=\"trash\" \r\n                    onClick={()=> props.deleteItem(item.key)}/>\r\n                </span>\r\n            </p>\r\n        </div>\r\n    })\r\n    return (\r\n        <div>\r\n            <FlipMove duration={500} easing=\"ease-in-out\">\r\n            { listItems} \r\n            </FlipMove>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ListItem;","\nimport './App.css';\nimport React from 'react';\nimport ListItem from './ListItem';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      items:[],\n      currentItem: {\n        item:'',\n        key:''\n      }\n    }\n    this.handleinput= this.handleinput.bind(this);\n    this.addItem=this.addItem.bind(this);\n    this.deleteItem= this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n\n  }\n\n  handleinput(e) {\n    this.setState({\n      currentItem:{\n        item:e.target.value,\n        key:new Date()\n      }\n    })\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem  = this.state.currentItem;\n    if(newItem.item!==\"\") {\n      const tasks = [...this.state.items,newItem];\n      this.setState({\n        items:tasks,\n        currentItem:{\n          item:'',\n          key:'f'\n        }\n      })\n    }\n  }\n\n  deleteItem(key) {\n    const filteredItems  = this.state.items.filter( item=> item.key!==key);\n    this.setState({\n      items:filteredItems\n    })\n  }\n\n  setUpdate(val,key) {\n    const items = this.state.items;\n    items.map( item=> {\n      if(item.key === key) {\n        item.item= val;\n      }\n    })\n    this.setState({\n      items:items\n    })\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input type=\"text\" placeholder=\"Enter your text here\" value={this.state.currentItem.item}\n              onChange={this.handleinput} />\n            <button type=\"submit\" >Add</button>\n          </form>\n        </header>\n        <ListItem items={this.state.items}  deleteItem={this.deleteItem} setUpdate={this.setUpdate}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}